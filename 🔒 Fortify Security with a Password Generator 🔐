import random
import string
import tkinter as tk
from tkinter import messagebox

def generate_password_ui():
    def create_password():
        try:
            length = int(length_entry.get())
            complexity = complexity_var.get()

            if length < 4:
                messagebox.showerror("Error", "Password length must be at least 4 characters.")
                return

            if complexity == "Letters only":
                characters = string.ascii_letters
            elif complexity == "Letters and numbers":
                characters = string.ascii_letters + string.digits
            elif complexity == "Letters, numbers, and special characters":
                characters = string.ascii_letters + string.digits + string.punctuation
            else:
                messagebox.showerror("Error", "Please select a valid complexity level.")
                return

            password = ''.join(random.choice(characters) for _ in range(length))
            result_label.config(text=f"Generated Password: {password}", fg="blue")

        except ValueError:
            messagebox.showerror("Error", "Invalid input. Please enter a valid number for length.")

    # Main window
    root = tk.Tk()
    root.title("Password Generator")
    root.geometry("500x400")
    root.config(bg="#E6F7FF")

    # Center the window
    root.eval('tk::PlaceWindow . center')

    # Header
    header_label = tk.Label(root, text="Password Generator", font=("Arial", 18, "bold"), bg="#1E90FF", fg="white", pady=10)
    header_label.pack(fill=tk.X)

    # Length input
    length_frame = tk.Frame(root, bg="#E6F7FF")
    length_frame.pack(pady=10)
    length_label = tk.Label(length_frame, text="Password Length:", font=("Arial", 12), bg="#E6F7FF")
    length_label.pack(side=tk.LEFT, padx=5)
    length_entry = tk.Entry(length_frame, font=("Arial", 12), width=10)
    length_entry.pack(side=tk.LEFT, padx=5)

    # Complexity options
    complexity_frame = tk.Frame(root, bg="#E6F7FF")
    complexity_frame.pack(pady=10)
    complexity_label = tk.Label(complexity_frame, text="Complexity:", font=("Arial", 12), bg="#E6F7FF")
    complexity_label.pack(side=tk.LEFT, padx=5)
    complexity_var = tk.StringVar(value="Letters only")
    complexity_menu = tk.OptionMenu(complexity_frame, complexity_var, "Letters only", "Letters and numbers", "Letters, numbers, and special characters")
    complexity_menu.config(font=("Arial", 12), bg="#1E90FF", fg="white")
    complexity_menu.pack(side=tk.LEFT, padx=5)

    # Generate button
    generate_button = tk.Button(root, text="Generate Password", font=("Arial", 14), bg="#1E90FF", fg="white", command=create_password)
    generate_button.pack(pady=10)

    # Result display
    result_label = tk.Label(root, text="", font=("Arial", 12, "bold"), bg="#E6F7FF")
    result_label.pack(pady=10)

    # Run the application
    root.mainloop()

if __name__ == "__main__":
    generate_password_ui()
